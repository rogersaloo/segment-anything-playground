{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fine-Tuning SAM Documentation The documentation contains an explanation of the codes fine tuning process and preperation of scripts for production. Prepared by rogers aloo github check the full repo to finetuning the SAM model here . Description SAM model on the root of this repository official_sam_repo provides a foundational model for segmentation tasks through prompting. The model release occurred without an explicit fine-tuning functionality. This folder contains a finetune of the model. The fine-tuning here focuses on the mask decorder only because it is lighter and therefore faster an more effecient to fine tune. You do not use the predictor SamPredctor in segment_anything/predictor.py since the predictor contains all the three parts of the underlying architecture (image encoder, prompt encoder and mask decoder). Additionally, the \"predict_torch\" in the SamPredictor class has a decorator(@torch.no_grad) preventing the re-computation of gradients. Fine-tuning In normal case of computer vision if we try to show a model new images that are not the same as the training dataset, the output performance will be degraded. Fine-tuning helps to maintain good performace comparable to the original model. Fine-tuning allows uptake of the pre-trained model and its weights and subjecting it to a new dataset or a task specific task relating to the needs of a specific use case. Requirements To finetune the model you need the images to segment, ground truths to the image and prompts for the image. This example Commands To start and load the live server run; * mkdocs build - Build the documentation site. * mkdocs serve - Start the live-reloading docs server. * mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ <!-- index.md # The documentation homepage. --> helpers.md # helper function for plotting masks plots.md # plots preprocess_image.md # preprocessing images for use in sam main.md # main train and sam model config.md # fine tuning hyperparameters and variables app.md # dockerize and make fast api endpoint japanese.md # Japanese translation of the documentation","title":"Overview"},{"location":"#fine-tuning-sam-documentation","text":"The documentation contains an explanation of the codes fine tuning process and preperation of scripts for production. Prepared by rogers aloo github check the full repo to finetuning the SAM model here .","title":"Fine-Tuning SAM Documentation"},{"location":"#description","text":"SAM model on the root of this repository official_sam_repo provides a foundational model for segmentation tasks through prompting. The model release occurred without an explicit fine-tuning functionality. This folder contains a finetune of the model. The fine-tuning here focuses on the mask decorder only because it is lighter and therefore faster an more effecient to fine tune. You do not use the predictor SamPredctor in segment_anything/predictor.py since the predictor contains all the three parts of the underlying architecture (image encoder, prompt encoder and mask decoder). Additionally, the \"predict_torch\" in the SamPredictor class has a decorator(@torch.no_grad) preventing the re-computation of gradients.","title":"Description"},{"location":"#fine-tuning","text":"In normal case of computer vision if we try to show a model new images that are not the same as the training dataset, the output performance will be degraded. Fine-tuning helps to maintain good performace comparable to the original model. Fine-tuning allows uptake of the pre-trained model and its weights and subjecting it to a new dataset or a task specific task relating to the needs of a specific use case.","title":"Fine-tuning"},{"location":"#requirements","text":"To finetune the model you need the images to segment, ground truths to the image and prompts for the image. This example","title":"Requirements"},{"location":"#commands","text":"To start and load the live server run; * mkdocs build - Build the documentation site. * mkdocs serve - Start the live-reloading docs server. * mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ <!-- index.md # The documentation homepage. --> helpers.md # helper function for plotting masks plots.md # plots preprocess_image.md # preprocessing images for use in sam main.md # main train and sam model config.md # fine tuning hyperparameters and variables app.md # dockerize and make fast api endpoint japanese.md # Japanese translation of the documentation","title":"Project layout"},{"location":"config/","text":"Configurations for Fine-tuning Description Contains the hyperparameters tuned for training the samp model on a specific task. Hyper-params Learning rate to 1e-06 Change image decoder loss type to MSE Using the Adam optimizer on the image decoder Variables model_type = 'vit_b' checkpoint = 'model_checkpoint/sam_vit_b_01ec64.pth' device = 'cuda:0' Path variables ground_truth_masks = \"dataset/ground_truth/broken_large\" location of the ground truth images of broken bottles. train_bottles = 'dataset/train/good' - location of the normal and broken bottles used for training sam model. test_bottles = 'dataset/test/broken_large/' - location of images used to test the fine-tuned sam model.","title":"Configuration"},{"location":"config/#configurations-for-fine-tuning","text":"","title":"Configurations for Fine-tuning"},{"location":"config/#description","text":"Contains the hyperparameters tuned for training the samp model on a specific task.","title":"Description"},{"location":"config/#hyper-params","text":"Learning rate to 1e-06 Change image decoder loss type to MSE Using the Adam optimizer on the image decoder","title":"Hyper-params"},{"location":"config/#variables","text":"model_type = 'vit_b' checkpoint = 'model_checkpoint/sam_vit_b_01ec64.pth' device = 'cuda:0'","title":"Variables"},{"location":"config/#path-variables","text":"ground_truth_masks = \"dataset/ground_truth/broken_large\" location of the ground truth images of broken bottles. train_bottles = 'dataset/train/good' - location of the normal and broken bottles used for training sam model. test_bottles = 'dataset/test/broken_large/' - location of images used to test the fine-tuned sam model.","title":"Path variables"},{"location":"helpers/","text":"Helpers Description Contain helper functions provided by facebookresearch . show masks show_mask show image masks in an image. show box show_box shows bounding boxes relating to an object in an image","title":"Helpers"},{"location":"helpers/#helpers","text":"","title":"Helpers"},{"location":"helpers/#description","text":"Contain helper functions provided by facebookresearch .","title":"Description"},{"location":"helpers/#show-masks","text":"show_mask show image masks in an image.","title":"show masks"},{"location":"helpers/#show-box","text":"show_box shows bounding boxes relating to an object in an image","title":"show box"},{"location":"japanese/","text":"\u65e5\u672c\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7d30\u304b\u304f\u8abf\u6574\u3059\u308b \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 SAM \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u3001\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u30d7\u30ed\u30bb\u30b9\u3068\u672c\u756a\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6e96\u5099\u306e\u8aac\u660e\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002rogers aloo github \u304c\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002SAM\u30e2\u30c7\u30eb\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u30d5\u30eb\u30ec\u30dd\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u8aac\u660e \u3053\u306e \u30ea\u30dd\u30b8\u30c8\u30ea \u306e\u30eb\u30fc\u30c8\u306b\u3042\u308b official_sam_repo \u306f\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u3088\u308b\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30bf\u30b9\u30af\u306e\u305f\u3081\u306e\u57fa\u790e\u30e2\u30c7\u30eb\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u3053\u306e\u30e2\u30c7\u30eb\u306e\u30ea\u30ea\u30fc\u30b9\u306f\u3001\u660e\u793a\u7684\u306a\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u6a5f\u80fd\u3092\u6301\u305f\u306a\u3044\u307e\u307e\u884c\u308f\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u306f\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306e\u5fae\u8abf\u6574\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a9\u30eb\u30c0\u3067\u306f\u3001\u30de\u30b9\u30af\u30c7\u30b3\u30fc\u30c0\u30fc\u306b\u7126\u70b9\u3092\u5f53\u3066\u3001\u5fae\u8abf\u6574\u3092\u884c\u3044\u307e\u3059\u3002 \u5fae\u8abf\u6574\u3092\u884c\u3044\u307e\u3059\u3002 segment_anything/predictor.py\u306e\u4e88\u6e2c\u5668SamPredctor\u306f\u3001\u57fa\u790e\u3068\u306a\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e3\u3064\u306e\u90e8\u5206\uff08\u753b\u50cf\u30a8\u30f3\u30b3\u30fc\u30c9\uff09\u3092\u3059\u3079\u3066\u542b\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 \u4e88\u6e2c\u5668\u306b\u306f\u3001\u57fa\u790e\u3068\u306a\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e3\u3064\u306e\u90e8\u5206\uff08\u753b\u50cf\u30a8\u30f3\u30b3\u30fc\u30c0\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u3001\u30de\u30b9\u30af\u30c7\u30b3\u30fc\u30c0\uff09\u304c\u3059\u3079\u3066\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u3055\u3089\u306b\u3001SamPredictor\u30af\u30e9\u30b9\u306e \"predict_torch\" \u306f\u52fe\u914d\u306e\u518d\u8a08\u7b97\u3092\u9632\u3050\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc(@torch.no_grad)\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 \u901a\u5e38\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u306e\u5834\u5408\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u306f\u7570\u306a\u308b\u65b0\u3057\u3044\u753b\u50cf\u3092\u30e2\u30c7\u30eb\u306b\u898b\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u51fa\u529b\u6027\u80fd\u304c\u4f4e\u4e0b\u3057\u307e\u3059\u3002 \u51fa\u529b\u6027\u80fd\u306f\u4f4e\u4e0b\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u5143\u306e\u30e2\u30c7\u30eb\u306b\u5339\u6575\u3059\u308b\u6027\u80fd\u3092\u7dad\u6301\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u3001\u4e8b\u524d\u306b\u8a13\u7df4\u3057\u305f\u30e2\u30c7\u30eb\u3068\u305d\u306e\u91cd\u307f\u3092\u53d6\u308a\u8fbc\u307f\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3084\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u306b\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u7279\u5b9a\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306e\u30cb\u30fc\u30ba\u306b\u95a2\u9023\u3059\u308b\u30bf\u30b9\u30af\u306b\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5fc5\u8981\u6761\u4ef6 \u30e2\u30c7\u30eb\u3092\u5fae\u8abf\u6574\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u753b\u50cf\u3001\u753b\u50cf\u306b\u5bfe\u3059\u308b\u771f\u5b9f\u306e\u6839\u62e0\u3001\u753b\u50cf\u306b\u5bfe\u3059\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u306e\u4f8b \u306f\u3058\u3081\u306b \u30d8\u30eb\u30d1\u30fc \u8aac\u660e facebookresearch \u304c\u63d0\u4f9b\u3059\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u304c\u542b\u307e\u308c\u308b\u3002 \u30de\u30b9\u30af\u3092\u8868\u793a\u3059\u308b show_mask \u753b\u50cf\u4e2d\u306e\u30de\u30b9\u30af\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30dc\u30c3\u30af\u30b9\u306e\u8868\u793a ``show_box``` \u753b\u50cf\u4e2d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u9023\u3059\u308b\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30d7\u30ed\u30c3\u30c8 \u8aac\u660e \u3053\u306e\u30d1\u30fc\u30c8\u3067\u306f\u3001\u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u3068\u30e2\u30c7\u30eb\u5f8c\u306e\u30de\u30b9\u30af\u753b\u50cf\u306e\u30d7\u30ed\u30c3\u30c8\u306b\u7126\u70b9\u3092\u5f53\u3066\u307e\u3059\u3002 plot_ground_truth \uff1a \u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u30de\u30b9\u30af\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b plot_sam_vs_tuned : \u30b5\u30f3\u30d7\u30eb\u306e\u30de\u30b9\u30af\u3068\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u6bd4\u8f03\u3057\u305f\u753b\u50cf\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b(\u624b\u3068\u624b\u3092\u5408\u308f\u305b\u3066) plot_train_mean : \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30ed\u30b9\u306e\u5e73\u5747\u30b0\u30e9\u30d5\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3002 compare_models_masks sam \u30de\u30b9\u30af\u3068\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u753b\u50cf\u30de\u30b9\u30af\u306e\u6bd4\u8f03\u30d7\u30ed\u30c3\u30c8\u3092\u6bd4\u8f03\u3059\u308b\u3002 \u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b7\u30f3\u30b0_\u753b\u50cf SAM\u30e2\u30c7\u30eb\u306b\u30ed\u30fc\u30c9\u3059\u308b\u524d\u306b\u3001\u753b\u50cf\u3092\u524d\u51e6\u7406\u3059\u308b\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001SAM\u30e2\u30c7\u30eb\u306e\u5165\u529b\u306b\u5408\u3046\u3088\u3046\u306b\u753b\u50cf\u30b5\u30a4\u30ba\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u3002 \u30e2\u30b8\u30e5\u30fc\u30eb get_bounding_box_coordinates``\uff1a\u6e21\u3055\u308c\u305f\u753b\u50cf\u306e\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u5ea7\u6a19\u3002 preprocess_image \uff1a \u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3092\u62bd\u51fa\u3059\u308b preprocess_image : \u30b0\u30e9\u30a6\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u306e\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3092\u62bd\u51fa\u3057\u307e\u3059\uff1a \u524d\u51e6\u7406\u6e08\u307f\u306e\u753b\u50cf\u3092\u8fd4\u3059 \u5165\u529b\u753b\u50cf\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u3057\u3066\u753b\u50cf\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b SAM\u306e\u5185\u90e8\u95a2\u6570\u306b\u671f\u5f85\u3059\u308b\u3053\u3068 \u30c8\u30ec\u30a4\u30f3 \u8aac\u660e SAM\u30e2\u30c7\u30eb\u306e\u5b9f\u884c\u3068\u5fae\u8abf\u6574\u306b\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30a4\u30f3\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u30e2\u30b8\u30e5\u30fc\u30eb compare_bbox_images_to_ground_truth_segmentation\uff1a \u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3057\u3001\u30de\u30b9\u30af\u306e\u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3002 get_ground_truth_masks \uff1a \u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u30dc\u30c8\u30eb\u306e\u30de\u30b9\u30af\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 train_sam \uff1a \u5fae\u8abf\u6574\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067sam\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b original_sam_model \uff1a \u30aa\u30ea\u30b8\u30ca\u30eb\u306eSAM\u30e2\u30c7\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b tuned_sam_model\uff1a \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305fSAM\u30e2\u30c7\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b load_image_to_predict : \u4e88\u6e2c\u7528\u306e\u753b\u50cf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3002 predict_on_tuned_sam : \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305fSAM\u30e2\u30c7\u30eb\u3002 predict_on_original_sam : \u30ed\u30fc\u30c9\u3059\u308b\u753b\u50cfID\u3002 main() \uff1a \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30e2\u30c7\u30eb\u3092\u5b9f\u884c\u3059\u308b \u30b3\u30de\u30f3\u30c9 \u30e9\u30a4\u30d6\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u3001\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306b\u5b9f\u884c\u3057\u307e\u3059\uff1b * mkdocs build - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b5\u30a4\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u3002 * mkdocs serve - \u30e9\u30a4\u30d6\u3067\u30ed\u30fc\u30c9\u3059\u308b docs \u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u3002 * mkdocs -h - \u30d8\u30eb\u30d7\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u3001\u7d42\u4e86\u3059\u308b\u3002 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ec\u30a4\u30a2\u30a6\u30c8 mkdocs.yml # \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002 docs/ <!-- index.md # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u3067\u3059\u3002--> helpers.md # \u30de\u30b9\u30af\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570 plots.md # \u30d7\u30ed\u30c3\u30c8 preprocess_image.md # sam\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u753b\u50cf\u306e\u524d\u51e6\u7406 main.md # \u8a13\u7df4\u3068sam\u306e\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb config.md # \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3084\u5909\u6570\u306e\u7d30\u304b\u3044\u8abf\u6574 app.md # dockerize\u3057\u3066fast api endpoint\u3092\u4f5c\u308b\u3002 japanese.md # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u65e5\u672c\u8a9e\u8a33","title":"\u65e5\u672c\u8a9e"},{"location":"japanese/#_1","text":"","title":"\u65e5\u672c\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7d30\u304b\u304f\u8abf\u6574\u3059\u308b"},{"location":"japanese/#sam","text":"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u3001\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u30d7\u30ed\u30bb\u30b9\u3068\u672c\u756a\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6e96\u5099\u306e\u8aac\u660e\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002rogers aloo github \u304c\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002SAM\u30e2\u30c7\u30eb\u306e\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u30d5\u30eb\u30ec\u30dd\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0 SAM \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"},{"location":"japanese/#_2","text":"\u3053\u306e \u30ea\u30dd\u30b8\u30c8\u30ea \u306e\u30eb\u30fc\u30c8\u306b\u3042\u308b official_sam_repo \u306f\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u3088\u308b\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30bf\u30b9\u30af\u306e\u305f\u3081\u306e\u57fa\u790e\u30e2\u30c7\u30eb\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u3053\u306e\u30e2\u30c7\u30eb\u306e\u30ea\u30ea\u30fc\u30b9\u306f\u3001\u660e\u793a\u7684\u306a\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u6a5f\u80fd\u3092\u6301\u305f\u306a\u3044\u307e\u307e\u884c\u308f\u308c\u307e\u3057\u305f\u3002\u3053\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u306f\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306e\u5fae\u8abf\u6574\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a9\u30eb\u30c0\u3067\u306f\u3001\u30de\u30b9\u30af\u30c7\u30b3\u30fc\u30c0\u30fc\u306b\u7126\u70b9\u3092\u5f53\u3066\u3001\u5fae\u8abf\u6574\u3092\u884c\u3044\u307e\u3059\u3002 \u5fae\u8abf\u6574\u3092\u884c\u3044\u307e\u3059\u3002 segment_anything/predictor.py\u306e\u4e88\u6e2c\u5668SamPredctor\u306f\u3001\u57fa\u790e\u3068\u306a\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e3\u3064\u306e\u90e8\u5206\uff08\u753b\u50cf\u30a8\u30f3\u30b3\u30fc\u30c9\uff09\u3092\u3059\u3079\u3066\u542b\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 \u4e88\u6e2c\u5668\u306b\u306f\u3001\u57fa\u790e\u3068\u306a\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e3\u3064\u306e\u90e8\u5206\uff08\u753b\u50cf\u30a8\u30f3\u30b3\u30fc\u30c0\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u30a8\u30f3\u30b3\u30fc\u30c0\u3001\u30de\u30b9\u30af\u30c7\u30b3\u30fc\u30c0\uff09\u304c\u3059\u3079\u3066\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u3055\u3089\u306b\u3001SamPredictor\u30af\u30e9\u30b9\u306e \"predict_torch\" \u306f\u52fe\u914d\u306e\u518d\u8a08\u7b97\u3092\u9632\u3050\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc(@torch.no_grad)\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002","title":"\u8aac\u660e"},{"location":"japanese/#_3","text":"\u901a\u5e38\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u306e\u5834\u5408\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u306f\u7570\u306a\u308b\u65b0\u3057\u3044\u753b\u50cf\u3092\u30e2\u30c7\u30eb\u306b\u898b\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u51fa\u529b\u6027\u80fd\u304c\u4f4e\u4e0b\u3057\u307e\u3059\u3002 \u51fa\u529b\u6027\u80fd\u306f\u4f4e\u4e0b\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u5143\u306e\u30e2\u30c7\u30eb\u306b\u5339\u6575\u3059\u308b\u6027\u80fd\u3092\u7dad\u6301\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u3001\u4e8b\u524d\u306b\u8a13\u7df4\u3057\u305f\u30e2\u30c7\u30eb\u3068\u305d\u306e\u91cd\u307f\u3092\u53d6\u308a\u8fbc\u307f\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3084\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u306b\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u7279\u5b9a\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306e\u30cb\u30fc\u30ba\u306b\u95a2\u9023\u3059\u308b\u30bf\u30b9\u30af\u306b\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0"},{"location":"japanese/#_4","text":"\u30e2\u30c7\u30eb\u3092\u5fae\u8abf\u6574\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u753b\u50cf\u3001\u753b\u50cf\u306b\u5bfe\u3059\u308b\u771f\u5b9f\u306e\u6839\u62e0\u3001\u753b\u50cf\u306b\u5bfe\u3059\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u306e\u4f8b","title":"\u5fc5\u8981\u6761\u4ef6"},{"location":"japanese/#_5","text":"","title":"\u306f\u3058\u3081\u306b"},{"location":"japanese/#_6","text":"","title":"\u30d8\u30eb\u30d1\u30fc"},{"location":"japanese/#_7","text":"facebookresearch \u304c\u63d0\u4f9b\u3059\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u304c\u542b\u307e\u308c\u308b\u3002","title":"\u8aac\u660e"},{"location":"japanese/#_8","text":"show_mask \u753b\u50cf\u4e2d\u306e\u30de\u30b9\u30af\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30de\u30b9\u30af\u3092\u8868\u793a\u3059\u308b"},{"location":"japanese/#_9","text":"``show_box``` \u753b\u50cf\u4e2d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u9023\u3059\u308b\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30dc\u30c3\u30af\u30b9\u306e\u8868\u793a"},{"location":"japanese/#_10","text":"","title":"\u30d7\u30ed\u30c3\u30c8"},{"location":"japanese/#_11","text":"\u3053\u306e\u30d1\u30fc\u30c8\u3067\u306f\u3001\u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u3068\u30e2\u30c7\u30eb\u5f8c\u306e\u30de\u30b9\u30af\u753b\u50cf\u306e\u30d7\u30ed\u30c3\u30c8\u306b\u7126\u70b9\u3092\u5f53\u3066\u307e\u3059\u3002 plot_ground_truth \uff1a \u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u30de\u30b9\u30af\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b plot_sam_vs_tuned : \u30b5\u30f3\u30d7\u30eb\u306e\u30de\u30b9\u30af\u3068\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u6bd4\u8f03\u3057\u305f\u753b\u50cf\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b(\u624b\u3068\u624b\u3092\u5408\u308f\u305b\u3066) plot_train_mean : \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30ed\u30b9\u306e\u5e73\u5747\u30b0\u30e9\u30d5\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3002 compare_models_masks sam \u30de\u30b9\u30af\u3068\u30d5\u30a1\u30a4\u30f3\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306e\u753b\u50cf\u30de\u30b9\u30af\u306e\u6bd4\u8f03\u30d7\u30ed\u30c3\u30c8\u3092\u6bd4\u8f03\u3059\u308b\u3002","title":"\u8aac\u660e"},{"location":"japanese/#_","text":"SAM\u30e2\u30c7\u30eb\u306b\u30ed\u30fc\u30c9\u3059\u308b\u524d\u306b\u3001\u753b\u50cf\u3092\u524d\u51e6\u7406\u3059\u308b\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001SAM\u30e2\u30c7\u30eb\u306e\u5165\u529b\u306b\u5408\u3046\u3088\u3046\u306b\u753b\u50cf\u30b5\u30a4\u30ba\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u3002","title":"\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b7\u30f3\u30b0_\u753b\u50cf"},{"location":"japanese/#_12","text":"get_bounding_box_coordinates``\uff1a\u6e21\u3055\u308c\u305f\u753b\u50cf\u306e\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u5ea7\u6a19\u3002 preprocess_image \uff1a \u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3092\u62bd\u51fa\u3059\u308b preprocess_image : \u30b0\u30e9\u30a6\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u306e\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u30de\u30b9\u30af\u3092\u62bd\u51fa\u3057\u307e\u3059\uff1a \u524d\u51e6\u7406\u6e08\u307f\u306e\u753b\u50cf\u3092\u8fd4\u3059 \u5165\u529b\u753b\u50cf\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u3057\u3066\u753b\u50cf\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b SAM\u306e\u5185\u90e8\u95a2\u6570\u306b\u671f\u5f85\u3059\u308b\u3053\u3068","title":"\u30e2\u30b8\u30e5\u30fc\u30eb"},{"location":"japanese/#_13","text":"","title":"\u30c8\u30ec\u30a4\u30f3"},{"location":"japanese/#_14","text":"SAM\u30e2\u30c7\u30eb\u306e\u5b9f\u884c\u3068\u5fae\u8abf\u6574\u306b\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30a4\u30f3\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u8aac\u660e"},{"location":"japanese/#_15","text":"compare_bbox_images_to_ground_truth_segmentation\uff1a \u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u53d6\u5f97\u3057\u3001\u30de\u30b9\u30af\u306e\u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3002 get_ground_truth_masks \uff1a \u30b0\u30e9\u30f3\u30c9\u30c8\u30a5\u30eb\u30fc\u30b9\u30dc\u30c8\u30eb\u306e\u30de\u30b9\u30af\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 train_sam \uff1a \u5fae\u8abf\u6574\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067sam\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b original_sam_model \uff1a \u30aa\u30ea\u30b8\u30ca\u30eb\u306eSAM\u30e2\u30c7\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b tuned_sam_model\uff1a \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305fSAM\u30e2\u30c7\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b load_image_to_predict : \u4e88\u6e2c\u7528\u306e\u753b\u50cf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3002 predict_on_tuned_sam : \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u305fSAM\u30e2\u30c7\u30eb\u3002 predict_on_original_sam : \u30ed\u30fc\u30c9\u3059\u308b\u753b\u50cfID\u3002 main() \uff1a \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30e2\u30c7\u30eb\u3092\u5b9f\u884c\u3059\u308b","title":"\u30e2\u30b8\u30e5\u30fc\u30eb"},{"location":"japanese/#_16","text":"\u30e9\u30a4\u30d6\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u3001\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306b\u5b9f\u884c\u3057\u307e\u3059\uff1b * mkdocs build - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b5\u30a4\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u3002 * mkdocs serve - \u30e9\u30a4\u30d6\u3067\u30ed\u30fc\u30c9\u3059\u308b docs \u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u3002 * mkdocs -h - \u30d8\u30eb\u30d7\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u3001\u7d42\u4e86\u3059\u308b\u3002","title":"\u30b3\u30de\u30f3\u30c9"},{"location":"japanese/#_17","text":"mkdocs.yml # \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002 docs/ <!-- index.md # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u3067\u3059\u3002--> helpers.md # \u30de\u30b9\u30af\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570 plots.md # \u30d7\u30ed\u30c3\u30c8 preprocess_image.md # sam\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u753b\u50cf\u306e\u524d\u51e6\u7406 main.md # \u8a13\u7df4\u3068sam\u306e\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb config.md # \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3084\u5909\u6570\u306e\u7d30\u304b\u3044\u8abf\u6574 app.md # dockerize\u3057\u3066fast api endpoint\u3092\u4f5c\u308b\u3002 japanese.md # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u65e5\u672c\u8a9e\u8a33","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ec\u30a4\u30a2\u30a6\u30c8"},{"location":"main/","text":"Train Description Contains the main script that is used to run and fine tune the SAM model. Modules compare_bbox_images_to_ground_truth_segmentation : Get the bounding boxes and plot against masks ground truth. get_ground_truth_masks : Obtain the masks of the ground truth bottles train_sam : Train sam model on fine-tuned parameter original_sam_model : Download original SAM model and instantiate tuned_sam_model : Download tuned SAM model and instantiate load_image_to_predict : loaded image for prediction predict_on_tuned_sam : tuned SAM model predict_on_original_sam : image id in the dir to load main() : Run the training model","title":"Train"},{"location":"main/#train","text":"","title":"Train"},{"location":"main/#description","text":"Contains the main script that is used to run and fine tune the SAM model.","title":"Description"},{"location":"main/#modules","text":"compare_bbox_images_to_ground_truth_segmentation : Get the bounding boxes and plot against masks ground truth. get_ground_truth_masks : Obtain the masks of the ground truth bottles train_sam : Train sam model on fine-tuned parameter original_sam_model : Download original SAM model and instantiate tuned_sam_model : Download tuned SAM model and instantiate load_image_to_predict : loaded image for prediction predict_on_tuned_sam : tuned SAM model predict_on_original_sam : image id in the dir to load main() : Run the training model","title":"Modules"},{"location":"plots/","text":"Plots Description This part of the project focuses on plotting images of the ground truth and the masked images after the model. plot_ground_truth : Plot ground truth masks plot_sam_vs_tuned Plot image of sam masks vs fine tuned hand in hand plot_train_mean Plot training loss mean graph compare_models_masks Compare plots of sam vs fine-tuned image mask comparison","title":"Plots"},{"location":"plots/#plots","text":"","title":"Plots"},{"location":"plots/#description","text":"This part of the project focuses on plotting images of the ground truth and the masked images after the model. plot_ground_truth : Plot ground truth masks plot_sam_vs_tuned Plot image of sam masks vs fine tuned hand in hand plot_train_mean Plot training loss mean graph compare_models_masks Compare plots of sam vs fine-tuned image mask comparison","title":"Description"},{"location":"preprocess_image/","text":"Preprocesing_Images Preprocessing images before loading to the SAM model. The modules resize the image size to fit the input of a SAM model. modules get_bounding_box_coordinates : coordinates of bounding boxes of the passed image preprocess_image : Extract the ground truth segmentation masks preprocess_image : Returns pre-processed images Image resizing by convert the input images into a format SAM's internal functions expect","title":"Preprocess Images"},{"location":"preprocess_image/#preprocesing_images","text":"Preprocessing images before loading to the SAM model. The modules resize the image size to fit the input of a SAM model.","title":"Preprocesing_Images"},{"location":"preprocess_image/#modules","text":"get_bounding_box_coordinates : coordinates of bounding boxes of the passed image preprocess_image : Extract the ground truth segmentation masks preprocess_image : Returns pre-processed images Image resizing by convert the input images into a format SAM's internal functions expect","title":"modules"}]}